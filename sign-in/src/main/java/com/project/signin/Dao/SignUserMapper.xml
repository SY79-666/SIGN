<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.project.signin.Dao.SignUserMapper">
    <resultMap id="BaseResultMap" type="com.project.signin.Entity.SignUser">
        <id column="ID" jdbcType="VARCHAR" property="id"/>
        <result column="ACCOUNT_USER" jdbcType="VARCHAR" property="accountUser"/>
        <result column="ACCOUNT_PASSWORD" jdbcType="VARCHAR" property="accountPassword"/>
        <result column="NAME" jdbcType="VARCHAR" property="name"/>
        <result column="PHONE" jdbcType="INTEGER" property="phone"/>
        <result column="ROLE" jdbcType="CHAR" property="role"/>
        <result column="DEPARTMENT" jdbcType="CHAR" property="department"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        ID
        , ACCOUNT_USER, ACCOUNT_PASSWORD, NAME, PHONE, ROLE, DEPARTMENT
    </sql>
    <select id="selectByExample" parameterType="com.project.signin.Entity.SignUserExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from sign_user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>

    <select id="singleLogin" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from sign_user
        where ACCOUNT_USER = #{param1} and ACCOUNT_PASSWORD = #{param2}
    </select>

    <select id="selectInformation" parameterType="map" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from sign_user
        <where>
            <if test="id != null">
                and ID in (#{id})
            </if>
            <if test="accountuser != null">
                and ACCOUNT_USER like '%#{accountUser}%'
            </if>
            <if test="name != null">
                and NAME like concat('%', #{name}, '%')
            </if>
            <if test="phone != null">
                and PHONE like '%#{phone}%'
            </if>
        </where>
    </select>

    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from sign_user
        where ID = #{id,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="map">
        delete
        from sign_user
        where ID = #{id,jdbcType=VARCHAR}
    </delete>
    <delete id="deleteByExample" parameterType="com.project.signin.Entity.SignUserExample">
        delete from sign_user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>


    <insert id="insert">
        insert into sign_user
        (
        <include refid="Base_Column_List"/>
        )
        values
        <foreach collection="record" item="item" index="index" separator=",">
            (#{item.id}, #{item.accountUser}, #{item.accountPassword},
            #{item.name}, #{item.phone}, #{item.role}, #{item.department})
        </foreach>
    </insert>

    <update id="upgrade" parameterType="java.lang.Integer">
        update sign_user
        set ROLE = '管理员'
        where PHONE = #{phone}
          and ID = #{id}
    </update>
    <update id="demotion" parameterType="java.lang.Integer">
        update sign_user
        set ROLE = '普通用户'
        where PHONE = #{phone}
          and ID = #{id}
    </update>
    <insert id="insertSelective" parameterType="com.project.signin.Entity.SignUser">
        insert into sign_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                ID,
            </if>
            <if test="accountUser != null">
                ACCOUNT_USER,
            </if>
            <if test="accountPassword != null">
                ACCOUNT_PASSWORD,
            </if>
            <if test="name != null">
                NAME,
            </if>
            <if test="phone != null">
                PHONE,
            </if>
            <if test="role != null">
                ROLE,
            </if>
            <if test="department != null">
                DEPARTMENT,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="accountUser != null">
                #{accountUser,jdbcType=VARCHAR},
            </if>
            <if test="accountPassword != null">
                #{accountPassword,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                #{phone,jdbcType=INTEGER},
            </if>
            <if test="role != null">
                #{role,jdbcType=CHAR},
            </if>
            <if test="department != null">
                #{department,jdbcType=CHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.project.signin.Entity.SignUserExample" resultType="java.lang.Long">
        select count(*) from sign_user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update sign_user
        <set>
            <if test="record.id != null">
                ID = #{record.id,jdbcType=VARCHAR},
            </if>
            <if test="record.accountUser != null">
                ACCOUNT_USER = #{record.accountUser,jdbcType=VARCHAR},
            </if>
            <if test="record.accountPassword != null">
                ACCOUNT_PASSWORD = #{record.accountPassword,jdbcType=VARCHAR},
            </if>
            <if test="record.name != null">
                NAME = #{record.name,jdbcType=VARCHAR},
            </if>
            <if test="record.phone != null">
                PHONE = #{record.phone,jdbcType=INTEGER},
            </if>
            <if test="record.role != null">
                ROLE = #{record.role,jdbcType=CHAR},
            </if>
            <if test="record.department != null">
                DEPARTMENT = #{record.department,jdbcType=CHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update sign_user
        set ID = #{record.id,jdbcType=VARCHAR},
        ACCOUNT_USER = #{record.accountUser,jdbcType=VARCHAR},
        ACCOUNT_PASSWORD = #{record.accountPassword,jdbcType=VARCHAR},
        NAME = #{record.name,jdbcType=VARCHAR},
        PHONE = #{record.phone,jdbcType=INTEGER},
        ROLE = #{record.role,jdbcType=CHAR},
        DEPARTMENT = #{record.department,jdbcType=CHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.project.signin.Entity.SignUser">
        update sign_user
        <set>
            <if test="accountUser != null">
                ACCOUNT_USER = #{accountUser,jdbcType=VARCHAR},
            </if>
            <if test="accountPassword != null">
                ACCOUNT_PASSWORD = #{accountPassword,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                NAME = #{name,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                PHONE = #{phone,jdbcType=INTEGER},
            </if>
            <if test="role != null">
                ROLE = #{role,jdbcType=CHAR},
            </if>
            <if test="department != null">
                DEPARTMENT = #{department,jdbcType=CHAR},
            </if>
        </set>
        where ID = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.project.signin.Entity.SignUser">
        update sign_user
        set ACCOUNT_USER     = #{accountUser,jdbcType=VARCHAR},
            ACCOUNT_PASSWORD = #{accountPassword,jdbcType=VARCHAR},
            NAME             = #{name,jdbcType=VARCHAR},
            PHONE            = #{phone,jdbcType=INTEGER},
            ROLE             = #{role,jdbcType=CHAR},
            DEPARTMENT       = #{department,jdbcType=CHAR}
        where ID = #{id,jdbcType=VARCHAR}
    </update>
</mapper>